problem:(Remove loop in Linked List).

 Given a linked list of N nodes such that it may contain a loop.
A loop here means that the last node of the linked list is connected to the node at position X(1-based index). If the linked list does not have any loop, X=0.
Remove the loop from the linked list, if it is present, i.e. unlink the last node which is forming the loop.

Input:
N = 3
value[] = {1,3,4}
X = 2
Output: 1
Explanation: The linked list looks like
1 -> 3 -> 4
     ^    |
     |____|    
A loop is present. If you remove it 
successfully, the answer will be 1. 

1)Source Code:
 
            class Solution
            {
                //Function to remove a loop in the linked list.
                public static void removeLoop(Node head){
                    Node slow=head;
                    Node fast=head;
                    while(fast!=null && fast.next!=null)
                    {
                        slow=slow.next;
                        fast=fast.next.next;
                        if(slow==fast)
                        break;
                    }
                    if(slow==head)
                    {
                        while(fast.next!=slow)
                        fast=fast.next;
                        fast.next=null;
                    }
                    else
                    {
                        slow=head;
                        while(fast.next!=slow.next)
                        {
                            slow=slow.next;
                            fast=fast.next;
                        }
                        fast.next=null;
                    }
                }
            }

2)Time Complexity:O(N).
3)Space Complexity:O(1).

