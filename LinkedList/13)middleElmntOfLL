problem:(Finding middle element in a linked list).

  Given a singly linked list of N nodes.
The task is to find the middle of the linked list. For example, if the linked list is
1-> 2->3->4->5, then the middle node of the list is 3.
If there are two middle nodes(in case, when N is even), print the second middle element.
For example, if the linked list given is 1->2->3->4->5->6, then the middle node of the list is 4.

1)Source Code:

				 class Solution
				{
					int getMiddle(Node head)
					{
						 Node slow=head;
						 Node fast=head;
						 while(fast!=null && fast.next!=null)
						 {
							 slow=slow.next;
							 fast=fast.next.next;
						 }
						 return slow.data;
					}
				}
				
2)Time Complexity:O(N)
3)Space Complexity:O(1)