problem:(Rotate a Linked List)
  Given a singly linked list of size N. The task is to left-shift the linked list by k nodes, where k is a given positive integer smaller than or equal to length of the linked list.

Input:
N = 5
value[] = {2, 4, 7, 8, 9}
k = 3
Output: 8 9 2 4 7
Explanation:
Rotate 1: 4 -> 7 -> 8 -> 9 -> 2
Rotate 2: 7 -> 8 -> 9 -> 2 -> 4
Rotate 3: 8 -> 9 -> 2 -> 4 -> 7

1)Source Code:

                class Solution{
                    //Function to rotate a linked list.
                    public Node rotate(Node head, int k) {
                        int c=0;
                        Node temp=head;
                        while(temp!=null)
                        {
                            temp=temp.next;
                            c+=1;
                        }
                        k=(k%c);
                        Node prev=null;
                        c=1;
                        temp=head;
                        Node nhead=head;
                        while(temp!=null && k!=0)
                        {
                            if(c==k+1)
                            {
                            prev.next=null;  
                            nhead=temp;
                            }
                            c+=1;
                            prev=temp;
                            temp=temp.next;
                        }
                        if(prev!=null)
                        prev.next=head;
                        return nhead;
                    }
                }