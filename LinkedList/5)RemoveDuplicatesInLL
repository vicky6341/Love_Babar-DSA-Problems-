problem:(Remove duplicate element from sorted Linked List)

 Given a singly linked list consisting of N nodes. The task is to remove duplicates (nodes with duplicate values) from the given list (if exists).
Note: Try not to use extra space. The nodes are arranged in a sorted way.

Input:
LinkedList: 2->2->4->5
Output: 2 4 5
Explanation: In the given linked list 
2 ->2 -> 4-> 5, only 2 occurs more 
than 1 time. So we need to remove it once.

1)Source Code:

            class GfG
            {
                //Function to remove duplicates from sorted linked list.
                Node removeDuplicates(Node head)
                {
                Node temp=head;
                while(temp!=null && temp.next!=null)
                {
                    if(temp.data==temp.next.data)
                        temp.next=temp.next.next;
                    else
                        temp=temp.next;
                }
                return head;
                }
            }

2)Time Complexity:O(N).
3)Space Complexity:O(1).
