
    class Solution {
        // Function to detect cycle in a directed graph.
        public boolean isCyclic(int V, ArrayList<ArrayList<Integer>> adj) {
            int[] vis=new int[V];
            int[] pvis=new int[V];
            for(int i=0;i<V;i++)
              vis[i]=0;
            for(int i=0;i<V;i++)
              pvis[i]=0;
            for(int i=0;i<V;i++)
            {
                if(vis[i]==0)
                  if(dfs(i,vis,pvis,adj))return true;;
            }
            return false;
        }
        public static boolean dfs(int i,int[] vis,int[] pvis,ArrayList<ArrayList<Integer>> adj)
        {
            if(vis[i]==1 && pvis[i]==1)
                 return true;
            else if(vis[i]==1 && pvis[i]==0)
                 return false;
            vis[i]=1;
            pvis[i]=1;
            for(int k:adj.get(i))
            {
                if(dfs(k,vis,pvis,adj))return true;
            }
            pvis[i]=0;
            return false;
        }
    }