//{ Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*;

class GFG {
	public static void main(String args[]) throws IOException
	{
	    Scanner sc = new Scanner(System.in);
	    int t = sc.nextInt();
		while(t>0)
		{
		    int N = sc.nextInt();
		    int P = sc.nextInt();
		    int prerequisites[][] = new int[P][2];
		    for(int i=0;i<P;i++)
		    {
		        for(int j=0;j<2;j++)
		        {
		            prerequisites[i][j] = sc.nextInt();
		        }
		    }
			Solution ob = new Solution();
			if(ob.isPossible(N,P,prerequisites))
			{
			    System.out.println("Yes");
			}
			else{
			    System.out.println("No");
			}
			t--;
		}
	}
	
}

// } Driver Code Ends


//User function Template for Java

class Solution {
    public boolean isPossible(int N,int P, int[][] prerequisites)
    {
        ArrayList<ArrayList<Integer>> adj=new ArrayList<>();
        for(int i=0;i<N;i++)
        {
            ArrayList<Integer> l1=new ArrayList<>();
            adj.add(l1);
        }
        for(int[] ar:prerequisites)
        {
            adj.get(ar[1]).add(ar[0]);
        }
        int[] id=new int[N];
        for(int i=0;i<N;i++)
        {
            for(int k:adj.get(i))
              id[k]+=1;
        }
        LinkedList<Integer> l=new LinkedList<>();
        for(int i=0;i<N;i++)
        {
            if(id[i]==0)
             l.add(i);
        }
        int c=0;
        while(!l.isEmpty())
        {
          int r=l.removeFirst();
          c+=1;
          for(int k:adj.get(r))
          {
              id[k]-=1;
              if(id[k]==0)
               l.add(k);
          }
        }
        if(c==N)return true;
        return false;
    }
}