problem:(Triplet Sum in Array).

 Given an array arr of size n and an integer X. Find if there's a triplet in the array which sums up to the given integer X.
 
Input: n = 6, X = 13,arr[] = [1 4 45 6 10 8]
Output:1
Explanation:The triplet {1, 4, 8} in the array sums up to 13.

1)Source code:

			 class Solution
			{
			   
				public static boolean find3Numbers(int A[], int n, int X) { 
				
					for(int i=0;i<n;i++)
					{
						HashMap<Integer,Integer> h=new HashMap<>();
						for(int j=i+1;j<n;j++)
						{
							if(h.containsKey(X-(A[i]+A[j])))
							  return true;
							else
							  h.put(A[j],1);
						}
					}
					return false;
				}
			}

2)Time Complexity:O(n^2).
3)Space Complexity:O(1).